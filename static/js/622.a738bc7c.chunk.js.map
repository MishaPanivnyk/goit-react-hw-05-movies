{"version":3,"file":"static/js/622.a738bc7c.chunk.js","mappings":"2PAEaA,EAAYC,EAAAA,GAAAA,IAAH,iEAKTC,EAAcD,EAAAA,GAAAA,IAAH,yGAQXE,EAAaF,EAAAA,GAAAA,IAAH,gEAIVG,EAAUH,EAAAA,GAAAA,GAAH,mE,SCXPI,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAIlBC,EACND,EADMC,MAAOC,EACbF,EADaE,SAAUC,EACvBH,EADuBG,YAAaC,EACpCJ,EADoCI,aAAcC,EAClDL,EADkDK,OAAQC,EAC1DN,EAD0DM,aAEtDC,EAAQ,yCAAqCJ,GAC7CK,EACJH,EAAOI,OAAS,EACZJ,EAAOK,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,MACpC,iBACAC,EAAcP,EAAaQ,MAAM,EAAG,GACpCC,EAAW,WAAsB,GAAfX,GAAmBY,QAAQ,GAAlC,KAEjB,OACE,UAACtB,EAAD,YACE,SAACG,EAAD,CAAYoB,IAAKV,EAAUW,IAAKjB,KAChC,UAACL,EAAD,YACE,SAACE,EAAD,oBAAaG,EAAb,aAAuBY,EAAvB,QACA,6CAAmBE,MACnB,sCACA,uBAAIb,KACJ,oCACA,uBAAIM,SAIX,E,uCClCD,aAAe,OAAf,oBAAe,WAA4BW,GAA5B,8GAEYC,EAAAA,EAAAA,IAAA,6CACiBD,EADjB,6DAFZ,uBAEHE,EAFG,EAEHA,KAGApB,EACNoB,EADMpB,MAAOC,EACbmB,EADanB,SAAUC,EACvBkB,EADuBlB,YAAaC,EACpCiB,EADoCjB,aAAcC,EAClDgB,EADkDhB,OAAQC,EAC1De,EAD0Df,aALjD,kBAOJ,CACLF,aAAAA,EACAH,MAAAA,EACAK,aAAAA,EACAJ,SAAAA,EACAC,YAAAA,EACAE,OAAAA,IAbS,gCAgBXiB,QAAQC,MAAR,MAhBW,gFCKf,IAAMC,GAAWC,EAAAA,EAAAA,OAAK,kBAAM,qDAAN,IAyCtB,EAvCqB,WAAO,IAAD,IACzB,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAO1B,EAAP,KAAkB2B,EAAlB,KAEQR,GAAYS,EAAAA,EAAAA,MAAZT,QAEFU,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAS7C,OAPAC,EAAAA,EAAAA,YAAU,YDdG,SAAf,mCCeIC,CAAaf,GAASgB,MAAK,SAAAC,GACzBT,EAAaS,EACd,GAEF,GAAE,CAACjB,KAGF,6BACE,SAACK,EAAD,CAAUa,GAAIR,EAAd,qBACC7B,IAAa,SAACD,EAAD,CAAWC,UAAWA,KAEpC,UAAC,EAAAsC,SAAD,CAAUC,UAAU,wCAApB,WACE,6CACA,2BACE,yBACE,SAAC,KAAD,CAAMF,GAAG,OAAON,MAAO,CAAEC,KAAMR,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMa,GAAG,UAAUN,MAAO,CAAEC,KAAMR,GAAlC,2BAKJ,SAAC,KAAD,SAIP,C","sources":["components/MovieDetails/MovieInfo.styled.js","components/MovieDetails/MovieInfo.jsx","services/getMovieById.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: inline-flex;\n  width: auto;\n`;\n\nexport const CardWrapper = styled.div`\n  display: block;\n  padding: 30px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\nexport const ImageBlock = styled.img`\n  display: inline-flex;\n  width: 30%;\n`;\nexport const Header1 = styled.h1`\n  padding: 0;\n  margin: 0;\n  border: 0;\n`;\n","import {\n  Container,\n  CardWrapper,\n  ImageBlock,\n  Header1,\n} from './MovieInfo.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieInfo = ({ dataMovie }) => {\n  // setImageSrc();\n  // setDataGenres();\n  // setDataRelease();\n  const { title, overview, poster_path, vote_average, genres, release_date } =\n    dataMovie;\n  const imageSrc = `https://image.tmdb.org/t/p/w500${poster_path}`;\n  const dataGenres =\n    genres.length > 0\n      ? genres.map(({ name }) => name).join(', ')\n      : 'No information';\n  const dataRelease = release_date.slice(0, 7);\n  const voteAvarage = `${(vote_average * 10).toFixed(2)}%`;\n\n  return (\n    <Container>\n      <ImageBlock src={imageSrc} alt={title} />\n      <CardWrapper>\n        <Header1>{`${title} (${dataRelease})`}</Header1>\n        <p>{`User score: ${voteAvarage}`}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h4>Genres</h4>\n        <p>{dataGenres}</p>\n      </CardWrapper>\n    </Container>\n  );\n};\nMovieInfo.propTypes = {\n  dataMovie: PropTypes.object.isRequired,\n};\n","import axios from 'axios';\nexport default async function getMovieById(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=71fec8ada61fc1ccf513a6c7541f2b6d&language=en-US`\n    );\n    const { title, overview, poster_path, vote_average, genres, release_date } =\n      data;\n    return {\n      vote_average,\n      title,\n      release_date,\n      overview,\n      poster_path,\n      genres,\n    };\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import { lazy, Suspense, useState, useEffect } from 'react';\nimport { useParams, useLocation, Outlet, Link } from 'react-router-dom';\n\nimport { MovieInfo } from 'components/MovieDetails/MovieInfo';\nimport getMovieById from '../../services/getMovieById';\n\nconst BackLink = lazy(() => import('../../components/BackLink/BackLink'));\n\nconst MovieDetails = () => {\n  const [dataMovie, setDataMovie] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const BackLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieById(movieId).then(movieData => {\n      setDataMovie(movieData);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [movieId]);\n\n  return (\n    <main>\n      <BackLink to={BackLinkHref}>Go back</BackLink>\n      {dataMovie && <MovieInfo dataMovie={dataMovie} />}\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <p>Additional info:</p>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: BackLink }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: BackLink }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Container","styled","CardWrapper","ImageBlock","Header1","MovieInfo","dataMovie","title","overview","poster_path","vote_average","genres","release_date","imageSrc","dataGenres","length","map","name","join","dataRelease","slice","voteAvarage","toFixed","src","alt","movieId","axios","data","console","error","BackLink","lazy","useState","setDataMovie","useParams","BackLinkHref","useLocation","state","from","useEffect","getMovieById","then","movieData","to","Suspense","fallback"],"sourceRoot":""}